# tasks file for ansible-role-packages
---
- name: Install common CLI packages
  become: true
  package:
    name: "{{ cli.common }}"
    state: present
  when: cli.common is defined and cli.enabled|default(false) == true

- name: Install Arch CLI packages
  become: true
  pacman:
    update_cache: true
    name: "{{ cli.arch}}"
    state: present
  when: ansible_os_family == "Archlinux" and cli.arch is defined and cli.enabled|default(false) == true

- name: Install Debian packages
  become: true
  apt:
    update_cache: true
    name: "{{ cli.debian }}"
    state: present
  when: ansible_os_family == "Debian" and cli.debian is defined and cli.enabled|default(false) == true

- name: Install common GUI packages
  become: true
  pacman:
    update_cache: true
    name: "{{ gui.common }}"
    state: present
  when: gui.common is defined and gui.enabled|default(false) == true

- name: Install Arch GUI packages
  become: true
  pacman:
    update_cache: true
    name: "{{ gui.arch }}"
    state: present
  when: ansible_os_family == "Archlinux" and gui.arch is defined and gui.enabled|default(false) == true

- name: Install Debian GUI packages
  become: true
  apt:
    update_cache: true
    name: "{{ gui.debian }}"
    state: present
  when: ansible_os_family == "Debian" and gui.debian is defined and gui.enabled|default(false) == true

- name: Install common language packages
  become: true
  pacman:
    update_cache: true
    name: "{{ lang.common }}"
    state: present
  when: lang.common is defined and lang.enabled|default(false) == true

- name: Install Arch lang packages
  become: true
  pacman:
    update_cache: true
    name: "{{ lang.arch }}"
    state: present
  when: ansible_os_family == "Archlinux" and lang.arch is defined and lang.enabled|default(false) == true

- name: Install Debian lang packages
  become: true
  apt:
    update_cache: true
    name: "{{ lang.debian }}"
    state: present
  when: ansible_os_family == "Debian" and lang.debian is defined and lang.enabled|default(false) == true

- name: Create the `aur_builder` user
  become: yes
  ansible.builtin.user:
    name: aur_builder
    create_home: yes
    group: wheel
  when: ansible_os_family == "Archlinux" and aur is defined

- name: Allow the `aur_builder` user to run `sudo pacman` without a password
  become: yes
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/11-install-aur_builder
    line: "aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman"
    create: yes
    validate: "visudo -cf %s"
  when: ansible_os_family == "Archlinux" and aur is defined

- name: Install Yay
  aur:
    name: yay
    use: auto
    state: present
  become: yes
  become_user: aur_builder
  when: ansible_os_family == "Archlinux" and aur is defined

- name: Install Arch Aur packages
  aur:
    name: "{{ aur.packages }}"
    use: auto
    state: present
  become: yes
  become_user: aur_builder
  when: ansible_os_family == "Archlinux" and aur is defined
